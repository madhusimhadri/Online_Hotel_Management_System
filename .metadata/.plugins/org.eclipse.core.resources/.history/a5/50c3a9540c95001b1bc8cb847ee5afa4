package com.guest.Service;



import org.mockito.*;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.jupiter.api.Assertions.assertEquals;

import java.util.ArrayList;
import java.util.List;
import java.util.NoSuchElementException;

import org.junit.Test;
import org.junit.runner.RunWith;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import org.springframework.test.context.junit4.SpringRunner;

import com.guest.Model.Guest;
import com.guest.Model.Show;
import com.guest.Repository.GuestRepository;


@RunWith(SpringRunner.class)
@SpringBootTest
public class GuestServiceTest {
	
	@Autowired
	private GuestService guestService;
	
	@MockBean
	private GuestRepository guestRepository;
	
	@MockBean
	private Show show ;
	
	@Test
	public void testaddGuest()
	{
		Guest guest = new Guest();
		Show show = new Show();
		show.setMessage("Success!, Guest Added");
		show.setReferId("G1");
		guest.setId("G1");
		guest.setName("Madhu");
		guest.setGender("Male");
		guest.setAge(20);
		guest.setMobileNo("9989976756");
		
		Mockito.when(guestRepository.save(guest)).thenReturn(guest);
		//assertThat(guestService.addGuest(guest));
		assertEquals(show.getReferId(),"G1");
		assertEquals(show.getMessage(),"Success!, Guest Added");
		
	}
	
	@Test
	public void testgetAllGuests()
	{
		Guest guest1 = new Guest();
		Show show1 = new Show();
		show1.setMessage("Success!, Guest Added");
		show1.setReferId("G1");
		guest1.setId("G1");
		guest1.setName("Madhu");
		guest1.setGender("Male");
		guest1.setAge(20);
		guest1.setMobileNo("9989976756");
		
		Guest guest2 = new Guest();
		Show show2 = new Show();
		show2.setMessage("Success!, Guest Added");
		show2.setReferId("G2");
		guest2.setId("G2");
		guest2.setName("Madhu1");
		guest2.setGender("Male");
		guest2.setAge(20);
		guest2.setMobileNo("9989976759");
		
		List<Guest> guestList = new ArrayList<>();
		guestList.add(guest1);
		guestList.add(guest2);
		
		Mockito.when(guestRepository.findAll()).thenReturn(guestList);
		assertThat(guestService.getAllGuests()).isEqualTo(guestList);
		
	}
	
	// executing catch block need to re check!!
	/*
	@Test
	public void testgetGuestById()
	{
		Guest guest = new Guest();
		guest.setId("G1");
		guest.setName("Madhu");
		guest.setGender("Male");
		guest.setAge(20);
		guest.setMobileNo("9989976756");
		
		Mockito.when(guestRepository.findById("G1").get()).thenReturn(guest);
		assertEquals(guest.getId(),"G1");
	}
	*/
	@Test
	public void testgetGuestByName()
	{
		Guest guest = new Guest();
		guest.setId("G1");
		guest.setName("Madhu");
		guest.setGender("Male");
		guest.setAge(20);
		guest.setMobileNo("9989976756");
		
		Mockito.when(guestRepository.findAll().get(0)).thenReturn(guest);
		assertEquals(guest.getName(),"Madhu");
	}
	
}
